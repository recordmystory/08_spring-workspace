<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 
				* annotation - driven
				
				@Controller 어노테이션을 활성화 해주는 태그
				각 요청시 실행할 Controller 클래스를 찾아 실행이 가능하게끔 하려면 HandlerMapping과 HandlerAdapter가 필요함
				
				두 개를 자동으로 bean으로 등록시켜줌
	 -->
	<annotation-driven />

	<!-- 
	
		* resources
			정적인 자원들을 관리하는 디렉토리의 경로를 설정해주는 태그
	 -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/assets/**" location="/assets/" />
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<!-- 
				* ViewResolver 역할
				DispatcherServlet으로 돌아오는 응답뷰명을 가지고
				prefix(앞), suffix(뒤) 값을 붙여서 포워딩할 응답뷰의 경로를 완성시켜서 사용자에게 보여주는 역할
				
				컨트롤러 쪽에서 return "main"; 하게되면 /WEB-INF/views/main.jsp의 경로가 완성됨 -->
	</beans:bean>
	
	<!-- 
			* component-scan
			
			base-package로 작성되어있는 package 내의 모든 클래스들을 스캔하면서 component(@Service, @Controller, @Repository) 어노테이션이 붙은 클래스들을 자동으로 빈으로 등록시켜주는 태그
	 		빈스캐닝과 관련된 태그
	 -->
	<context:component-scan base-package="com.br.mvc" />
	
	
	
</beans:beans>
